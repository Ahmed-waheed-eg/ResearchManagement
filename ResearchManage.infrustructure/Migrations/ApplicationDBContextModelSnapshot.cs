// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchManage.Infrustructure.Data;

#nullable disable

namespace ResearchManage.Infrustructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResearchManage.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResearchId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Research", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Abestract")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResearcherID")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ResearcherID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Researches", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Scholar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Bio")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Scholars", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Supervisor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Supervisors", (string)null);
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Comment", b =>
                {
                    b.HasOne("ResearchManage.Domain.Entities.Research", "research")
                        .WithMany("comments")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ResearchManage.Domain.Entities.Reviewer", "reviewer")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("research");

                    b.Navigation("reviewer");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Research", b =>
                {
                    b.HasOne("ResearchManage.Domain.Entities.Department", "department")
                        .WithMany("Researches")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ResearchManage.Domain.Entities.Scholar", "scholar")
                        .WithMany("Researches")
                        .HasForeignKey("ResearcherID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ResearchManage.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("Researches")
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Supervisor");

                    b.Navigation("department");

                    b.Navigation("scholar");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Scholar", b =>
                {
                    b.HasOne("ResearchManage.Domain.Entities.Department", "Department")
                        .WithMany("Scholars")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Supervisor", b =>
                {
                    b.HasOne("ResearchManage.Domain.Entities.Department", "Department")
                        .WithMany("Supervisors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Department", b =>
                {
                    b.Navigation("Researches");

                    b.Navigation("Scholars");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Research", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Reviewer", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Scholar", b =>
                {
                    b.Navigation("Researches");
                });

            modelBuilder.Entity("ResearchManage.Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("Researches");
                });
#pragma warning restore 612, 618
        }
    }
}
